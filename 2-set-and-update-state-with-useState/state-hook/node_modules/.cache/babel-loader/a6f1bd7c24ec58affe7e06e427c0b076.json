{"ast":null,"code":"var _jsxFileName = \"/Users/nicorithner/coding_practice/frontend_practice/React_Stuff/react-hooks/2-set-and-update-state-with-useState/state-hook/src/components/SecondCounter.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Counter({\n  initialCount = 0\n}) {\n  const [count, setCount] = useState(initialCount);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \"Count: \", count, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(initialCount),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setCount(prevCount => prevCount + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\nApp.propTypes = {\n  initialCount: PropTypes.number\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/nicorithner/coding_practice/frontend_practice/React_Stuff/react-hooks/2-set-and-update-state-with-useState/state-hook/src/components/SecondCounter.js"],"names":["React","useState","PropTypes","Counter","initialCount","count","setCount","prevCount","App","propTypes","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA,YAAY,GAAE;AAAhB,CAAjB,EAAsC;AACpC,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBL,QAAQ,CAACG,YAAD,CAApC;AAEA,sBACE,qDACUC,KADV,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACF,YAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAACC,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,eAIE;AAAQ,IAAA,OAAO,EAAE,MAAMD,QAAQ,CAACC,SAAS,IAAIA,SAAS,GAAG,CAA1B,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,CADF;AAQD;;AAEDC,GAAG,CAACC,SAAJ,GAAgB;AACdL,EAAAA,YAAY,EAAEF,SAAS,CAACQ;AADV,CAAhB;AAIA,eAAeP,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nfunction Counter({ initialCount= 0 }) {\n  const [ count, setCount ] = useState(initialCount);\n\n  return (\n    <>\n      Count: {count}\n      <button onClick={() => setCount(initialCount)}>Reset</button>\n      <button onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\n      <button onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\n    </>\n  );\n}\n\nApp.propTypes = {\n  initialCount: PropTypes.number,\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}